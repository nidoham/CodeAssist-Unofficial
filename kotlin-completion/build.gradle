plugins {
    id 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'com.diffplug.spotless'

android {
    compileSdk 31
	namespace "com.tyron.kotlin_completion"
	
	spotless {
		java {
			target "**/*.java"
			googleJavaFormat()
			}
		}
		
    defaultConfig {
        minSdk 26
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

}

configurations.implementation {
    exclude group: "org.jetbrains", module: "annotations"
}

dependencies {

    implementation project(path: ':kotlinc')
	//implementation("com.github.Cosmic-Ide.kotlinc-android:kotlinc-android:fce2462f00") 
    implementation project(path: ':javac')
    implementation project(path: ':project')
    implementation project(path: ':logging')
    implementation project(path: ':build-logic')
    implementation project(path: ':completion-api')
    implementation project(path: ':actions-api')
    implementation project(path: ':editor-api')
    implementation project(path: ':common')

    api 'org.jetbrains.exposed:exposed-core:0.32.1'
    api 'org.jetbrains.exposed:exposed-dao:0.32.1'
    api 'org.jetbrains.exposed:exposed-jdbc:0.32.1'
    api 'com.h2database:h2:1.4.200'
    implementation 'androidx.annotation:annotation:1.8.2'
	// https://mvnrepository.com/artifact/org.checkerframework/checker-qual
   implementation("org.checkerframework:checker-qual:3.50.0")
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        "--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
        "--add-exports=jdk.compiler/sun.nio.ch=ALL-UNNAMED"
    ]
}
