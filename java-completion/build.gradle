plugins {
    id 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'com.diffplug.spotless'

android {
    compileSdk 31
    namespace "com.tyron.completion.java"

    spotless {
        java {
            target "**/*.java"
            googleJavaFormat()
        }
    }

    defaultConfig {
        minSdk 26
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
    }
}

configurations {
    jdkCompiler {
        canBeConsumed = false
        canBeResolved = true
    }
}

dependencies {
    implementation project(':actions-api')
    implementation project(':editor-api')
    implementation project(':treeview')
    implementation project(':kotlin-completion')

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.4.4'
    testImplementation 'org.robolectric:robolectric:4.13'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation project(':javac')

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    api 'com.github.javaparser:javaparser-core:3.26.1'

    implementation 'androidx.annotation:annotation:1.8.2'

    implementation project(':common')
    implementation project(':completion-api')
    implementation project(':language-api')

    implementation project(':javac')
    implementation project(':logging')

    api project(':build-logic')

    compileOnly 'androidx.recyclerview:recyclerview:1.1.0'
    compileOnly project(':android-stubs')

    /* ----------------------------------------------------------
     * JDK compiler classes for javac â€“ runner-proof
     * ---------------------------------------------------------- */
    def jdkHome = System.getProperty('java.home')
    def toolsCandidates = [
        "$jdkHome/../lib/tools.jar",          // JDK 8 layout
        "$jdkHome/lib/tools.jar",             // some other images
        "$jdkHome/jmods/jdk.compiler.jmod"    // JDK 11+ Ubuntu layout
    ]
    def toolsFile = toolsCandidates.find { new File(it).exists() }
    if (toolsFile == null) {
        throw new GradleException("Cannot locate JDK compiler classes. JAVA_HOME=$jdkHome")
    }
    jdkCompiler files(toolsFile)
}

android.libraryVariants.configureEach { variant ->
    variant.javaCompileProvider.configure {
        options.bootstrapClasspath += configurations.jdkCompiler
    }
}
 
