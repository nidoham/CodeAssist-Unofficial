plugins {
    id 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'com.diffplug.spotless'

android {
    compileSdk 31
	namespace "com.tyron.completion.java"
	
	spotless {
		java {
			target "**/*.java"
			googleJavaFormat()
			}
		}
		
    defaultConfig {
        minSdk 26
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    buildFeatures {
        buildConfig true	    
    }
}

dependencies {

    implementation project(path: ':actions-api')
    implementation project(path: ':editor-api')
    implementation project(path: ':treeview')
    implementation project(path: ':kotlin-completion')

    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.4.4"
    testImplementation "org.robolectric:robolectric:4.13"
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation project(path: ':javac')
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // code generation
    api 'com.github.javaparser:javaparser-core:3.26.1'
    
    implementation 'androidx.annotation:annotation:1.8.2'

    implementation project(path: ':common')
    implementation project(path: ':completion-api')
    implementation project(path: ':language-api')

    implementation project(path: ':javac')
    implementation project(path: ':logging')

    api project(path: ':build-logic')

    compileOnly 'androidx.recyclerview:recyclerview:1.1.0'
    compileOnly project(path: ':android-stubs')


}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        "--add-exports", "jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
        "--add-exports", "jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
        "--add-exports", "jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
        "--add-exports", "jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
        "--add-exports", "jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED"
    ]
}

afterEvaluate {
    def tools = org.gradle.internal.jvm.Jvm.current().toolsJar
    if (tools != null) {
        dependencies.add('compileOnly', files(tools))
    } else {
        // JDK 11+ modular
        dependencies.add('compileOnly', files("${System.getProperty('java.home')}/../lib/tools.jar"))
    }
}
